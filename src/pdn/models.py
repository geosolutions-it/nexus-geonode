from django.db import models


class News(models.Model):
    remote_id = models.BigIntegerField(unique=True)
    source_id = models.BigIntegerField()
    title = models.CharField(max_length=250)
    url = models.CharField(max_length=1000)
    country = models.CharField(max_length=255)
    country_code = models.CharField(max_length=10, blank=True)
    date = models.DateTimeField()
    source = models.CharField(max_length=255)


class Project(models.Model):
    remote_id = models.BigIntegerField(unique=True)
    name = models.CharField(max_length=250)
    acronym = models.CharField(max_length=250)
    description = models.TextField()
    logo_url = models.CharField(max_length=1000)
    url = models.CharField(max_length=1000)
    active = models.BooleanField(default=False)


class Alert(models.Model):
    remote_id = models.BigIntegerField(unique=True)
    title = models.CharField(max_length=2500, blank=True)
    title_detail = models.CharField(max_length=2500, blank=True)
    summary = models.CharField(max_length=2500, blank=True)
    summary_detail = models.CharField(max_length=2500, blank=True)
    links = models.CharField(max_length=2500, blank=True)
    gdacs_temporary = models.CharField(max_length=2500, blank=True)
    link = models.CharField(max_length=2500, blank=True)
    published = models.CharField(max_length=2500, blank=True)
    published_parsed = models.CharField(max_length=2500, blank=True)
    gdacs_iscurrent = models.CharField(max_length=2500, blank=True)
    gdacs_fromdate = models.CharField(max_length=2500, blank=True)
    gdacs_todate = models.CharField(max_length=2500, blank=True)
    gdacs_durationinweek = models.CharField(max_length=2500, blank=True)
    gdacs_year = models.CharField(max_length=2500, blank=True)
    tags = models.CharField(max_length=2500, blank=True)
    uid = models.CharField(max_length=2500, blank=True)
    guidislink = models.CharField(max_length=2500, blank=True)
    geo_lat = models.CharField(max_length=2500, blank=True)
    geo_long = models.CharField(max_length=2500, blank=True)
    geo_point = models.CharField(max_length=2500, blank=True)
    gdacs_bbox = models.CharField(max_length=2500, blank=True)
    gdacs_cap = models.CharField(max_length=2500, blank=True)
    gdacs_icon = models.CharField(max_length=2500, blank=True)
    gdacs_version = models.CharField(max_length=2500, blank=True)
    gdacs_eventtype = models.CharField(max_length=2500, blank=True)
    gdacs_alertlevel = models.CharField(max_length=2500, blank=True)
    gdacs_alertscore = models.CharField(max_length=2500, blank=True)
    gdacs_episodealertlevel = models.CharField(max_length=2500, blank=True)
    gdacs_episodealertscore = models.CharField(max_length=2500, blank=True)
    gdacs_eventname = models.CharField(max_length=2500, blank=True)
    gdacs_eventid = models.CharField(max_length=2500, blank=True)
    gdacs_episodeid = models.CharField(max_length=2500, blank=True)
    gdacs_calculationtype = models.CharField(max_length=2500, blank=True)
    gdacs_severity = models.CharField(max_length=2500, blank=True)
    gdacs_population = models.CharField(max_length=2500, blank=True)
    gdacs_vulnerability = models.CharField(max_length=2500, blank=True)
    gdacs_iso3 = models.CharField(max_length=2500, blank=True)
    gdacs_country = models.CharField(max_length=2500, blank=True)
    gdacs_glide = models.CharField(max_length=2500, blank=True)
    gdacs_mapimage = models.CharField(max_length=2500, blank=True)
    gdacs_maplink = models.CharField(max_length=2500, blank=True)
    gdacs_gtsimage = models.CharField(max_length=2500, blank=True)
    gdacs_gtslink = models.CharField(max_length=2500, blank=True)
    gdacs_resource = models.CharField(max_length=2500, blank=True)
    gdacs_title = models.CharField(max_length=2500, blank=True)
    gdacs_description = models.CharField(max_length=2500, blank=True)
    gdacs_acknowledgements = models.CharField(max_length=2500, blank=True)
    gdacs_accesslevel = models.CharField(max_length=2500, blank=True)
    gdacs_resources = models.CharField(max_length=2500, blank=True)


class Expert(models.Model):
    remote_id = models.BigIntegerField(unique=True)
    name = models.CharField(max_length=250)
    title = models.CharField(max_length=250)
    country = models.CharField(max_length=255)
    country_code = models.CharField(max_length=10, blank=True)
    email = models.CharField(max_length=250)
    ministry = models.CharField(max_length=250)
    country_id = models.CharField(max_length=100, blank=True)
